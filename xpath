XML 
XPath is a technique in Selenium to navigate through the HTML structure of a page

There are two types of XPath:
Absolute XPath.
Relative XPath.

Dynamic xpath
Dynamic XPath is also called as custom XPath and it is one way to locate element uniquely




Abolute X path :

Relative X path:
1. Locating Element with known Attribute:
Syntax 
//*[@id="txtUsername"], //*[@name='txtUsername'],//*[@name='username']

2.Locating Element with known Attribute and Element
Syntax 
//input[@id='txtUsername'],//input[@name='username']

3.Locating Element with known Visible Text (Exact match)
Syntax
//a[text()='OrangeHRM, Inc'] , //*[text()='OrangeHRM, Inc']

4.Locating Element with known Visible Text is match (Partial)
Syntax
//a[Contains(text(),'OrangeHRM')], //a[Contains(text(),'OrangeHRM')]

5.Locating Element with Multiple Attribute 
Syntax
//*[@type='submit'][@name='Submit'][@class='button']

6.Locating Element with Startwith Text
Syntax
//*[Starts-with(text(),'OrangeHRM')]
//*[Starts-with(text(),'username')]
7.Locating Element with Dynamic Attribute value
Syntax
//*[contains(@href,'orangehrm')]

8.Locating Parent element
Syntax
//*[@id='txtUsername']/parent::form

9.Locating Child element
Syntax
//*[@id='txtUsername']/child::input

10.Locating Ancestor element
Syntax
//*[@id='txtUsername']/ancestor::input

11.Locating Following 
Syntax
//*[@id='txtUsername']/follwing::input(1)

12.Locating preceding element 
Syntax
//*[@id='txtUsername']/preceding::input(1)

13.Locating following sibling element 
Syntax
//*[@id='txtUsername']/follwing-sibling::element(1)
